plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}" // Minecraft
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2" // Yarn
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}" // Loader
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}" // Fabric API

	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}" // Mod Menu
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { // Cloth Config
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from(["COPYING", "COPYING.LESSER"]) {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
